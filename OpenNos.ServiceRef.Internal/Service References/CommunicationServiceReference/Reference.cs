//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OpenNos.ServiceRef.Internal.CommunicationServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CommunicationServiceReference.ICommunicationService", CallbackContract=typeof(OpenNos.ServiceRef.Internal.CommunicationServiceReference.ICommunicationServiceCallback))]
    public interface ICommunicationService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICommunicationService/RegisterPlayerLogin")]
        void RegisterPlayerLogin(string name, long sessionId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICommunicationService/RegisterPlayerLogin")]
        System.Threading.Tasks.Task RegisterPlayerLoginAsync(string name, long sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommunicationService/HasRegisteredPlayerLogin", ReplyAction="http://tempuri.org/ICommunicationService/HasRegisteredPlayerLoginResponse")]
        bool HasRegisteredPlayerLogin(string name, long sessionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommunicationService/HasRegisteredPlayerLogin", ReplyAction="http://tempuri.org/ICommunicationService/HasRegisteredPlayerLoginResponse")]
        System.Threading.Tasks.Task<bool> HasRegisteredPlayerLoginAsync(string name, long sessionId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICommunicationServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ICommunicationService/RegisterPlayerLoginCallback")]
        void RegisterPlayerLoginCallback(string value);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICommunicationServiceChannel : OpenNos.ServiceRef.Internal.CommunicationServiceReference.ICommunicationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CommunicationServiceClient : System.ServiceModel.DuplexClientBase<OpenNos.ServiceRef.Internal.CommunicationServiceReference.ICommunicationService>, OpenNos.ServiceRef.Internal.CommunicationServiceReference.ICommunicationService {
        
        public CommunicationServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public CommunicationServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public CommunicationServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CommunicationServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public CommunicationServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void RegisterPlayerLogin(string name, long sessionId) {
            base.Channel.RegisterPlayerLogin(name, sessionId);
        }
        
        public System.Threading.Tasks.Task RegisterPlayerLoginAsync(string name, long sessionId) {
            return base.Channel.RegisterPlayerLoginAsync(name, sessionId);
        }
        
        public bool HasRegisteredPlayerLogin(string name, long sessionId) {
            return base.Channel.HasRegisteredPlayerLogin(name, sessionId);
        }
        
        public System.Threading.Tasks.Task<bool> HasRegisteredPlayerLoginAsync(string name, long sessionId) {
            return base.Channel.HasRegisteredPlayerLoginAsync(name, sessionId);
        }
    }
}
