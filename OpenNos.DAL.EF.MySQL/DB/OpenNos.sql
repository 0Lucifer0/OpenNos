-- ========================================== --
-- Current Migration: 201608262013219_Ares
-- ========================================== --

DROP PROCEDURE IF EXISTS `_idempotent_script`;

DELIMITER //

CREATE PROCEDURE `_idempotent_script`()
BEGIN
  DECLARE CurrentMigration TEXT;

  IF EXISTS(SELECT 1 FROM information_schema.tables 
  WHERE table_name = '__MigrationHistory' 
  AND table_schema = DATABASE()) THEN 
    SET CurrentMigration = (SELECT
`Project1`.`MigrationId`
FROM `__MigrationHistory` AS `Project1`
 WHERE `Project1`.`ContextKey` = 'OpenNos.DAL.EF.MySQL.Migrations.Configuration'
 ORDER BY 
`Project1`.`MigrationId` DESC LIMIT 1);
  END IF;

  IF CurrentMigration IS NULL THEN
    SET CurrentMigration = '0';
  END IF;

  IF CurrentMigration < '201608262013219_Ares' THEN 
create table `Account` (`AccountId` bigint not null  auto_increment ,`Authority` smallint not null ,`LastCompliment` datetime not null ,`LastSession` int not null ,`Name` nvarchar(255) ,`Password` varchar(255) ,primary key ( `AccountId`) ) engine=InnoDb auto_increment=0;
create table `Character` (`CharacterId` bigint not null  auto_increment ,`AccountId` bigint not null ,`Act4Dead` int not null ,`Act4Kill` int not null ,`Act4Points` int not null ,`ArenaWinner` int not null ,`Backpack` int not null ,`BuffBlocked` bool not null ,`Class` TINYINT UNSIGNED not null ,`Compliment` smallint not null ,`Dignity` float not null ,`EmoticonsBlocked` bool not null ,`ExchangeBlocked` bool not null ,`Faction` int not null ,`FamilyRequestBlocked` bool not null ,`FriendRequestBlocked` bool not null ,`Gender` TINYINT UNSIGNED not null ,`Gold` bigint not null ,`GroupRequestBlocked` bool not null ,`HairColor` TINYINT UNSIGNED not null ,`HairStyle` TINYINT UNSIGNED not null ,`HeroChatBlocked` bool not null ,`HeroLevel` TINYINT UNSIGNED not null ,`HeroXp` bigint not null ,`Hp` int not null ,`HpBlocked` bool not null ,`JobLevel` TINYINT UNSIGNED not null ,`JobLevelXp` bigint not null ,`Level` TINYINT UNSIGNED not null ,`LevelXp` bigint not null ,`MapId` smallint not null ,`MapX` smallint not null ,`MapY` smallint not null ,`MasterPoints` int not null ,`MasterTicket` int not null ,`MinilandInviteBlocked` bool not null ,`MouseAimLock` bool not null ,`Mp` int not null ,`Name` varchar(255) ,`QuickGetUp` bool not null ,`RagePoint` bigint not null ,`Reput` bigint not null ,`Slot` TINYINT UNSIGNED not null ,`SpAdditionPoint` int not null ,`SpPoint` int not null ,`State` TINYINT UNSIGNED not null ,`TalentLose` int not null ,`TalentSurrender` int not null ,`TalentWin` int not null ,`WhisperBlocked` bool not null ,primary key ( `CharacterId`) ) engine=InnoDb auto_increment=0;
CREATE index  `IX_AccountId` on `Character` (`AccountId` DESC) using HASH;
CREATE index  `IX_MapId` on `Character` (`MapId` DESC) using HASH;
create table `CharacterSkill` (`CharacterSkillId` bigint not null  auto_increment ,`CharacterId` bigint not null ,`SkillVNum` smallint not null ,primary key ( `CharacterSkillId`) ) engine=InnoDb auto_increment=0;
CREATE index  `IX_CharacterId` on `CharacterSkill` (`CharacterId` DESC) using HASH;
CREATE index  `IX_SkillVNum` on `CharacterSkill` (`SkillVNum` DESC) using HASH;
create table `Skill` (`SkillVNum` smallint not null ,`AttackAnimation` smallint not null ,`BuffId` smallint not null ,`CastAnimation` smallint not null ,`CastEffect` smallint not null ,`CastId` smallint not null ,`CastTime` smallint not null ,`Class` TINYINT UNSIGNED not null ,`Cooldown` smallint not null ,`CPCost` TINYINT UNSIGNED not null ,`Damage` smallint not null ,`Duration` smallint not null ,`Effect` smallint not null ,`Element` TINYINT UNSIGNED not null ,`ElementalDamage` smallint not null ,`HitType` TINYINT UNSIGNED not null ,`ItemVNum` smallint not null ,`Level` TINYINT UNSIGNED not null ,`LevelMinimum` TINYINT UNSIGNED not null ,`MinimumAdventurerLevel` TINYINT UNSIGNED not null ,`MinimumArcherLevel` TINYINT UNSIGNED not null ,`MinimumMagicianLevel` TINYINT UNSIGNED not null ,`MinimumSwordmanLevel` TINYINT UNSIGNED not null ,`MpCost` smallint not null ,`Name` nvarchar(255) ,`Price` int not null ,`Range` TINYINT UNSIGNED not null ,`SecondarySkillVNum` smallint not null ,`SkillChance` smallint not null ,`SkillType` TINYINT UNSIGNED not null ,`TargetRange` TINYINT UNSIGNED not null ,`TargetType` TINYINT UNSIGNED not null ,`Type` TINYINT UNSIGNED not null ,`UpgradeSkill` smallint not null ,`UpgradeType` smallint not null ,primary key ( `SkillVNum`) ) engine=InnoDb auto_increment=0;
create table `Combo` (`ComboId` int not null  auto_increment ,`Animation` smallint not null ,`Effect` smallint not null ,`Hit` smallint not null ,`SkillVNum` smallint not null ,primary key ( `ComboId`) ) engine=InnoDb auto_increment=0;
CREATE index  `IX_SkillVNum` on `Combo` (`SkillVNum` DESC) using HASH;
create table `NpcMonsterSkill` (`CharacterSkillId` bigint not null  auto_increment ,`NpcMonsterVNum` smallint not null ,`Rate` smallint not null ,`SkillVNum` smallint not null ,primary key ( `CharacterSkillId`) ) engine=InnoDb auto_increment=0;
CREATE index  `IX_NpcMonsterVNum` on `NpcMonsterSkill` (`NpcMonsterVNum` DESC) using HASH;
CREATE index  `IX_SkillVNum` on `NpcMonsterSkill` (`SkillVNum` DESC) using HASH;
create table `NpcMonster` (`NpcMonsterVNum` smallint not null ,`AmountRequired` TINYINT UNSIGNED not null ,`AttackClass` TINYINT UNSIGNED not null ,`AttackUpgrade` TINYINT UNSIGNED not null ,`BasicArea` TINYINT UNSIGNED not null ,`BasicCooldown` smallint not null ,`BasicRange` TINYINT UNSIGNED not null ,`BasicSkill` smallint not null ,`CloseDefence` smallint not null ,`Concentrate` smallint not null ,`CriticalLuckRate` TINYINT UNSIGNED not null ,`CriticalRate` smallint not null ,`DamageMaximum` smallint not null ,`DamageMinimum` smallint not null ,`DarkResistance` tinyint not null ,`DefenceDodge` smallint not null ,`DefenceUpgrade` TINYINT UNSIGNED not null ,`DistanceDefence` smallint not null ,`DistanceDefenceDodge` smallint not null ,`Element` TINYINT UNSIGNED not null ,`ElementRate` smallint not null ,`FireResistance` tinyint not null ,`HeroLevel` TINYINT UNSIGNED not null ,`IsHostile` bool not null ,`JobXP` int not null ,`Level` TINYINT UNSIGNED not null ,`LightResistance` tinyint not null ,`MagicDefence` smallint not null ,`MaxHP` int not null ,`MaxMP` int not null ,`Name` nvarchar(255) ,`NoAggresiveIcon` bool not null ,`Race` TINYINT UNSIGNED not null ,`RaceType` TINYINT UNSIGNED not null ,`RespawnTime` int not null ,`Speed` TINYINT UNSIGNED not null ,`VNumRequired` smallint not null ,`WaterResistance` tinyint not null ,`XP` int not null ,primary key ( `NpcMonsterVNum`) ) engine=InnoDb auto_increment=0;
create table `Drop` (`DropId` smallint not null  auto_increment ,`Amount` int not null ,`DropChance` int not null ,`ItemVNum` smallint not null ,`MapTypeId` smallint,`MonsterVNum` smallint,primary key ( `DropId`) ) engine=InnoDb auto_increment=0;
CREATE index  `IX_ItemVNum` on `Drop` (`ItemVNum` DESC) using HASH;
CREATE index  `IX_MapTypeId` on `Drop` (`MapTypeId` DESC) using HASH;
CREATE index  `IX_MonsterVNum` on `Drop` (`MonsterVNum` DESC) using HASH;
create table `Item` (`VNum` smallint not null ,`BasicUpgrade` TINYINT UNSIGNED not null ,`CellonLvl` TINYINT UNSIGNED not null ,`Class` TINYINT UNSIGNED not null ,`CloseDefence` smallint not null ,`Color` TINYINT UNSIGNED not null ,`Concentrate` smallint not null ,`CriticalLuckRate` TINYINT UNSIGNED not null ,`CriticalRate` smallint not null ,`DamageMaximum` smallint not null ,`DamageMinimum` smallint not null ,`DarkElement` TINYINT UNSIGNED not null ,`DarkResistance` TINYINT UNSIGNED not null ,`DefenceDodge` smallint not null ,`DistanceDefence` smallint not null ,`DistanceDefenceDodge` smallint not null ,`Effect` smallint not null ,`EffectValue` int not null ,`Element` TINYINT UNSIGNED not null ,`ElementRate` smallint not null ,`EquipmentSlot` TINYINT UNSIGNED not null ,`FireElement` TINYINT UNSIGNED not null ,`FireResistance` TINYINT UNSIGNED not null ,`HitRate` smallint not null ,`Hp` smallint not null ,`HpRegeneration` smallint not null ,`IsBlocked` bool not null ,`IsColored` bool not null ,`IsConsumable` bool not null ,`IsDroppable` bool not null ,`IsHeroic` bool not null ,`IsMinilandObject` bool not null ,`IsSoldable` bool not null ,`IsTradable` bool not null ,`IsWarehouse` bool not null ,`ItemSubType` TINYINT UNSIGNED not null ,`ItemType` TINYINT UNSIGNED not null ,`ItemValidTime` bigint not null ,`LevelJobMinimum` TINYINT UNSIGNED not null ,`LevelMinimum` TINYINT UNSIGNED not null ,`LightElement` TINYINT UNSIGNED not null ,`LightResistance` TINYINT UNSIGNED not null ,`MagicDefence` smallint not null ,`MaxCellon` TINYINT UNSIGNED not null ,`MaxCellonLvl` TINYINT UNSIGNED not null ,`MaxElementRate` smallint not null ,`MaximumAmmo` TINYINT UNSIGNED not null ,`MoreHp` smallint not null ,`MoreMp` smallint not null ,`Morph` smallint not null ,`Mp` smallint not null ,`MpRegeneration` smallint not null ,`Name` nvarchar(255) ,`Price` bigint not null ,`PvpDefence` smallint not null ,`PvpStrength` TINYINT UNSIGNED not null ,`ReduceOposantResistance` smallint not null ,`ReputationMinimum` TINYINT UNSIGNED not null ,`ReputPrice` bigint not null ,`SecondaryElement` TINYINT UNSIGNED not null ,`Sex` TINYINT UNSIGNED not null ,`Speed` TINYINT UNSIGNED not null ,`SpType` TINYINT UNSIGNED not null ,`Type` TINYINT UNSIGNED not null ,`WaitDelay` smallint not null ,`WaterElement` TINYINT UNSIGNED not null ,`WaterResistance` TINYINT UNSIGNED not null ,primary key ( `VNum`) ) engine=InnoDb auto_increment=0;
create table `Recipe` (`RecipeId` smallint not null  auto_increment ,`Amount` TINYINT UNSIGNED not null ,`ItemVNum` smallint not null ,`MapNpcId` int not null ,primary key ( `RecipeId`) ) engine=InnoDb auto_increment=0;
CREATE index  `IX_ItemVNum` on `Recipe` (`ItemVNum` DESC) using HASH;
CREATE index  `IX_MapNpcId` on `Recipe` (`MapNpcId` DESC) using HASH;
create table `MapNpc` (`MapNpcId` int not null ,`Dialog` smallint not null ,`Effect` smallint not null ,`EffectDelay` smallint not null ,`IsDisabled` bool not null ,`IsMoving` bool not null ,`IsSitting` bool not null ,`MapId` smallint not null ,`MapX` smallint not null ,`MapY` smallint not null ,`NpcVNum` smallint not null ,`Position` TINYINT UNSIGNED not null ,primary key ( `MapNpcId`) ) engine=InnoDb auto_increment=0;
CREATE index  `IX_MapId` on `MapNpc` (`MapId` DESC) using HASH;
CREATE index  `IX_NpcVNum` on `MapNpc` (`NpcVNum` DESC) using HASH;
create table `Map` (`MapId` smallint not null ,`Data` longblob,`Music` int not null ,`Name` nvarchar(255) ,primary key ( `MapId`) ) engine=InnoDb auto_increment=0;
create table `MapMonster` (`MapMonsterId` int not null ,`IsDisabled` bool not null ,`IsMoving` bool not null ,`MapId` smallint not null ,`MapX` smallint not null ,`MapY` smallint not null ,`MonsterVNum` smallint not null ,`Position` TINYINT UNSIGNED not null ,primary key ( `MapMonsterId`) ) engine=InnoDb auto_increment=0;
CREATE index  `IX_MapId` on `MapMonster` (`MapId` DESC) using HASH;
CREATE index  `IX_MonsterVNum` on `MapMonster` (`MonsterVNum` DESC) using HASH;
create table `MapTypeMap` (`MapId` smallint not null ,`MapTypeId` smallint not null ,primary key ( `MapId`,`MapTypeId`) ) engine=InnoDb auto_increment=0;
CREATE index  `IX_MapId` on `MapTypeMap` (`MapId` DESC) using HASH;
CREATE index  `IX_MapTypeId` on `MapTypeMap` (`MapTypeId` DESC) using HASH;
create table `MapType` (`MapTypeId` smallint not null  auto_increment ,`MapTypeName` longtext,`PotionDelay` smallint not null ,primary key ( `MapTypeId`) ) engine=InnoDb auto_increment=0;
create table `Portal` (`PortalId` int not null  auto_increment ,`DestinationMapId` smallint not null ,`DestinationX` smallint not null ,`DestinationY` smallint not null ,`IsDisabled` bool not null ,`SourceMapId` smallint not null ,`SourceX` smallint not null ,`SourceY` smallint not null ,`Type` tinyint not null ,primary key ( `PortalId`) ) engine=InnoDb auto_increment=0;
CREATE index  `IX_DestinationMapId` on `Portal` (`DestinationMapId` DESC) using HASH;
CREATE index  `IX_SourceMapId` on `Portal` (`SourceMapId` DESC) using HASH;
create table `Teleporter` (`TeleporterId` smallint not null  auto_increment ,`Index` smallint not null ,`MapId` smallint not null ,`MapNpcId` int not null ,`MapX` smallint not null ,`MapY` smallint not null ,primary key ( `TeleporterId`) ) engine=InnoDb auto_increment=0;
CREATE index  `IX_MapId` on `Teleporter` (`MapId` DESC) using HASH;
CREATE index  `IX_MapNpcId` on `Teleporter` (`MapNpcId` DESC) using HASH;
create table `Shop` (`ShopId` int not null  auto_increment ,`MapNpcId` int not null ,`MenuType` TINYINT UNSIGNED not null ,`Name` nvarchar(255) ,`ShopType` TINYINT UNSIGNED not null ,primary key ( `ShopId`) ) engine=InnoDb auto_increment=0;
CREATE index  `IX_MapNpcId` on `Shop` (`MapNpcId` DESC) using HASH;
create table `ShopItem` (`ShopItemId` int not null  auto_increment ,`Color` TINYINT UNSIGNED not null ,`ItemVNum` smallint not null ,`Rare` tinyint not null ,`ShopId` int not null ,`Slot` TINYINT UNSIGNED not null ,`Type` TINYINT UNSIGNED not null ,`Upgrade` TINYINT UNSIGNED not null ,primary key ( `ShopItemId`) ) engine=InnoDb auto_increment=0;
CREATE index  `IX_ItemVNum` on `ShopItem` (`ItemVNum` DESC) using HASH;
CREATE index  `IX_ShopId` on `ShopItem` (`ShopId` DESC) using HASH;
create table `ShopSkill` (`ShopSkillId` int not null  auto_increment ,`ShopId` int not null ,`SkillVNum` smallint not null ,`Slot` TINYINT UNSIGNED not null ,`Type` TINYINT UNSIGNED not null ,primary key ( `ShopSkillId`) ) engine=InnoDb auto_increment=0;
CREATE index  `IX_ShopId` on `ShopSkill` (`ShopId` DESC) using HASH;
CREATE index  `IX_SkillVNum` on `ShopSkill` (`SkillVNum` DESC) using HASH;
create table `RecipeItem` (`RecipeItemId` smallint not null  auto_increment ,`Amount` TINYINT UNSIGNED not null ,`ItemVNum` smallint not null ,`RecipeId` smallint not null ,primary key ( `RecipeItemId`) ) engine=InnoDb auto_increment=0;
CREATE index  `IX_ItemVNum` on `RecipeItem` (`ItemVNum` DESC) using HASH;
CREATE index  `IX_RecipeId` on `RecipeItem` (`RecipeId` DESC) using HASH;
create table `GeneralLog` (`LogId` bigint not null  auto_increment ,`AccountId` bigint not null ,`CharacterId` bigint,`IpAddress` nvarchar(255) ,`LogData` nvarchar(255) ,`LogType` longtext,`Timestamp` datetime not null ,primary key ( `LogId`) ) engine=InnoDb auto_increment=0;
CREATE index  `IX_AccountId` on `GeneralLog` (`AccountId` DESC) using HASH;
CREATE index  `IX_CharacterId` on `GeneralLog` (`CharacterId` DESC) using HASH;
create table `Inventory` (`InventoryId` bigint not null ,`CharacterId` bigint not null ,`Slot` smallint not null ,`Type` TINYINT UNSIGNED not null ,primary key ( `InventoryId`) ) engine=InnoDb auto_increment=0;
CREATE index  `IX_InventoryId` on `Inventory` (`InventoryId` DESC) using HASH;
CREATE UNIQUE index  `IX_SlotAndType` on `Inventory` (`CharacterId` DESC,`Slot` DESC,`Type` DESC) using HASH;
create table `ItemInstance` (`ItemInstanceId` bigint not null  auto_increment ,`Amount` int not null ,`Design` smallint not null ,`IsUsed` bool not null ,`ItemDeleteTime` datetime,`ItemVNum` smallint not null ,`Rare` tinyint not null ,`Upgrade` TINYINT UNSIGNED not null ,`HP` smallint,`MP` smallint,`Ammo` TINYINT UNSIGNED,`Cellon` TINYINT UNSIGNED,`CellonOptionId` int,`CloseDefence` smallint,`Concentrate` smallint,`CriticalDodge` smallint,`CriticalLuckRate` TINYINT UNSIGNED,`CriticalRate` smallint,`DamageMaximum` smallint,`DamageMinimum` smallint,`DarkElement` TINYINT UNSIGNED,`DarkResistance` tinyint,`DefenceDodge` smallint,`DistanceDefence` smallint,`DistanceDefenceDodge` smallint,`ElementRate` smallint,`FireElement` TINYINT UNSIGNED,`FireResistance` tinyint,`HitRate` smallint,`HP1` smallint,`IsEmpty` bool,`IsFixed` bool,`LightElement` TINYINT UNSIGNED,`LightResistance` tinyint,`MagicDefence` smallint,`MaxElementRate` smallint,`MP1` smallint,`WaterElement` TINYINT UNSIGNED,`WaterResistance` tinyint,`XP` bigint,`SlDamage` smallint,`SlDefence` smallint,`SlElement` smallint,`SlHP` smallint,`SpDamage` TINYINT UNSIGNED,`SpDark` TINYINT UNSIGNED,`SpDefence` TINYINT UNSIGNED,`SpElement` TINYINT UNSIGNED,`SpFire` TINYINT UNSIGNED,`SpHP` TINYINT UNSIGNED,`SpLevel` TINYINT UNSIGNED,`SpLight` TINYINT UNSIGNED,`SpStoneUpgrade` TINYINT UNSIGNED,`SpWater` TINYINT UNSIGNED,`Discriminator` nvarchar(128)  not null ,primary key ( `ItemInstanceId`) ) engine=InnoDb auto_increment=0;
CREATE index  `IX_ItemVNum` on `ItemInstance` (`ItemVNum` DESC) using HASH;
create table `CellonOption` (`CellonOptionId` int not null  auto_increment ,`Level` TINYINT UNSIGNED not null ,`Type` TINYINT UNSIGNED not null ,`Value` int not null ,`WearableInstanceId` bigint not null ,primary key ( `CellonOptionId`) ) engine=InnoDb auto_increment=0;
CREATE index  `IX_WearableInstanceId` on `CellonOption` (`WearableInstanceId` DESC) using HASH;
create table `QuicklistEntry` (`EntryId` bigint not null  auto_increment ,`CharacterId` bigint not null ,`Morph` smallint not null ,`Pos` smallint not null ,`Q1` smallint not null ,`Q2` smallint not null ,`Slot` smallint not null ,`Type` smallint not null ,primary key ( `EntryId`) ) engine=InnoDb auto_increment=0;
CREATE index  `IX_CharacterId` on `QuicklistEntry` (`CharacterId` DESC) using HASH;
create table `Respawn` (`RespawnId` bigint not null  auto_increment ,`CharacterId` bigint not null ,`MapId` smallint not null ,`RespawnType` TINYINT UNSIGNED not null ,`X` smallint not null ,`Y` smallint not null ,primary key ( `RespawnId`) ) engine=InnoDb auto_increment=0;
CREATE index  `IX_CharacterId` on `Respawn` (`CharacterId` DESC) using HASH;
create table `PenaltyLog` (`PenaltyLogId` int not null  auto_increment ,`AccountId` bigint not null ,`DateEnd` datetime not null ,`DateStart` datetime not null ,`Penalty` TINYINT UNSIGNED not null ,`Reason` nvarchar(255) ,primary key ( `PenaltyLogId`) ) engine=InnoDb auto_increment=0;
CREATE index  `IX_AccountId` on `PenaltyLog` (`AccountId` DESC) using HASH;
alter table `Character` add constraint `FK_Character_Map_MapId`  foreign key (`MapId`) references `Map` ( `MapId`) ;
alter table `Character` add constraint `FK_Character_Account_AccountId`  foreign key (`AccountId`) references `Account` ( `AccountId`) ;
alter table `CharacterSkill` add constraint `FK_CharacterSkill_Skill_SkillVNum`  foreign key (`SkillVNum`) references `Skill` ( `SkillVNum`) ;
alter table `CharacterSkill` add constraint `FK_CharacterSkill_Character_CharacterId`  foreign key (`CharacterId`) references `Character` ( `CharacterId`) ;
alter table `Combo` add constraint `FK_Combo_Skill_SkillVNum`  foreign key (`SkillVNum`) references `Skill` ( `SkillVNum`) ;
alter table `NpcMonsterSkill` add constraint `FK_NpcMonsterSkill_NpcMonster_NpcMonsterVNum`  foreign key (`NpcMonsterVNum`) references `NpcMonster` ( `NpcMonsterVNum`) ;
alter table `NpcMonsterSkill` add constraint `FK_NpcMonsterSkill_Skill_SkillVNum`  foreign key (`SkillVNum`) references `Skill` ( `SkillVNum`) ;
alter table `Drop` add constraint `FK_Drop_Item_ItemVNum`  foreign key (`ItemVNum`) references `Item` ( `VNum`) ;
alter table `Drop` add constraint `FK_Drop_MapType_MapTypeId`  foreign key (`MapTypeId`) references `MapType` ( `MapTypeId`) ;
alter table `Drop` add constraint `FK_Drop_NpcMonster_MonsterVNum`  foreign key (`MonsterVNum`) references `NpcMonster` ( `NpcMonsterVNum`) ;
alter table `Recipe` add constraint `FK_Recipe_MapNpc_MapNpcId`  foreign key (`MapNpcId`) references `MapNpc` ( `MapNpcId`) ;
alter table `Recipe` add constraint `FK_Recipe_Item_ItemVNum`  foreign key (`ItemVNum`) references `Item` ( `VNum`) ;
alter table `MapNpc` add constraint `FK_MapNpc_Map_MapId`  foreign key (`MapId`) references `Map` ( `MapId`) ;
alter table `MapNpc` add constraint `FK_MapNpc_NpcMonster_NpcVNum`  foreign key (`NpcVNum`) references `NpcMonster` ( `NpcMonsterVNum`) ;
alter table `MapMonster` add constraint `FK_MapMonster_Map_MapId`  foreign key (`MapId`) references `Map` ( `MapId`) ;
alter table `MapMonster` add constraint `FK_MapMonster_NpcMonster_MonsterVNum`  foreign key (`MonsterVNum`) references `NpcMonster` ( `NpcMonsterVNum`) ;
alter table `MapTypeMap` add constraint `FK_MapTypeMap_Map_MapId`  foreign key (`MapId`) references `Map` ( `MapId`) ;
alter table `MapTypeMap` add constraint `FK_MapTypeMap_MapType_MapTypeId`  foreign key (`MapTypeId`) references `MapType` ( `MapTypeId`) ;
alter table `Portal` add constraint `FK_Portal_Map_DestinationMapId`  foreign key (`DestinationMapId`) references `Map` ( `MapId`) ;
alter table `Portal` add constraint `FK_Portal_Map_SourceMapId`  foreign key (`SourceMapId`) references `Map` ( `MapId`) ;
alter table `Teleporter` add constraint `FK_Teleporter_Map_MapId`  foreign key (`MapId`) references `Map` ( `MapId`) ;
alter table `Teleporter` add constraint `FK_Teleporter_MapNpc_MapNpcId`  foreign key (`MapNpcId`) references `MapNpc` ( `MapNpcId`) ;
alter table `Shop` add constraint `FK_Shop_MapNpc_MapNpcId`  foreign key (`MapNpcId`) references `MapNpc` ( `MapNpcId`) ;
alter table `ShopItem` add constraint `FK_ShopItem_Shop_ShopId`  foreign key (`ShopId`) references `Shop` ( `ShopId`) ;
alter table `ShopItem` add constraint `FK_ShopItem_Item_ItemVNum`  foreign key (`ItemVNum`) references `Item` ( `VNum`) ;
alter table `ShopSkill` add constraint `FK_ShopSkill_Shop_ShopId`  foreign key (`ShopId`) references `Shop` ( `ShopId`) ;
alter table `ShopSkill` add constraint `FK_ShopSkill_Skill_SkillVNum`  foreign key (`SkillVNum`) references `Skill` ( `SkillVNum`) ;
alter table `RecipeItem` add constraint `FK_RecipeItem_Recipe_RecipeId`  foreign key (`RecipeId`) references `Recipe` ( `RecipeId`) ;
alter table `RecipeItem` add constraint `FK_RecipeItem_Item_ItemVNum`  foreign key (`ItemVNum`) references `Item` ( `VNum`) ;
alter table `GeneralLog` add constraint `FK_GeneralLog_Character_CharacterId`  foreign key (`CharacterId`) references `Character` ( `CharacterId`) ;
alter table `GeneralLog` add constraint `FK_GeneralLog_Account_AccountId`  foreign key (`AccountId`) references `Account` ( `AccountId`) ;
alter table `Inventory` add constraint `FK_Inventory_ItemInstance_InventoryId`  foreign key (`InventoryId`) references `ItemInstance` ( `ItemInstanceId`) ;
alter table `Inventory` add constraint `FK_Inventory_Character_CharacterId`  foreign key (`CharacterId`) references `Character` ( `CharacterId`) ;
alter table `ItemInstance` add constraint `FK_ItemInstance_Item_ItemVNum`  foreign key (`ItemVNum`) references `Item` ( `VNum`)  on update cascade on delete cascade ;
alter table `CellonOption` add constraint `FK_CellonOption_ItemInstance_WearableInstanceId`  foreign key (`WearableInstanceId`) references `ItemInstance` ( `ItemInstanceId`)  on update cascade on delete cascade ;
alter table `QuicklistEntry` add constraint `FK_QuicklistEntry_Character_CharacterId`  foreign key (`CharacterId`) references `Character` ( `CharacterId`) ;
alter table `Respawn` add constraint `FK_Respawn_Character_CharacterId`  foreign key (`CharacterId`) references `Character` ( `CharacterId`) ;
alter table `PenaltyLog` add constraint `FK_PenaltyLog_Account_AccountId`  foreign key (`AccountId`) references `Account` ( `AccountId`) ;
create table `__MigrationHistory` (`MigrationId` nvarchar(150)  not null ,`ContextKey` nvarchar(300)  not null ,`Model` longblob not null ,`ProductVersion` nvarchar(32)  not null ,primary key ( `MigrationId`) ) engine=InnoDb auto_increment=0;
INSERT INTO `__MigrationHistory`(
`MigrationId`, 
`ContextKey`, 
`Model`, 
`ProductVersion`) VALUES (
'201608262013219_Ares', 
'OpenNos.DAL.EF.MySQL.Migrations.Configuration', 

'6.1.3-40302');
  END IF;

END //

DELIMITER ;

CALL `_idempotent_script`();

DROP PROCEDURE IF EXISTS `_idempotent_script`;

